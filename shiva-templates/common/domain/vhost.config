<if !hosting.suspended>
<compress>
<if account.isAllowChildMod && !hosting.parent.deleting>
<if account.plan.isResourceAvailable("rlimitcpu")><if !hosting.getChild("rlimitcpu")> <assign res=hosting.addChild("rlimitcpu","","")></if><else><assign res=hosting.findChild("rlimitcpu").delete></if>
<if account.plan.isResourceAvailable("rlimitmem")><if !hosting.getChild("rlimitmem")><assign res=hosting.addChild("rlimitmem","","")></if><else><assign res = hosting.findChild("rlimitmem").delete></if>
<if account.plan.isResourceAvailable("rlimitnproc")><if !hosting.getChild("rlimitnproc")><assign res=hosting.addChild("rlimitnproc","","")></if><else><assign res=hosting.findChild("rlimitnproc").delete></if>
</if>
</compress>
<VirtualHost ${hosting.getIP()}:80>
ServerAdmin  ${hosting.getServerAdmin()}
DocumentRoot ${hosting.path}
ServerName   ${hosting.parent.name}
<compress>
<assign acc_alias = hosting.getChild("idomain_alias")>
<assign daliases=hosting.parent.getChildren("domain_alias")>
<assign aliases = hosting.getChildren("vhost_alias")>
<assign aliases2 = hosting.parent.getChildren("3ldomain_alias")>
<assign count="0">
</compress>
<function checkAmountOfServerAlias()><compress>
  </compress><if toolbox.mod(count,"5") == "0">
ServerAlias<compress>
   </compress></if><compress>
  <assign count=toolbox.add(count,"1")>
</compress></function>
<if aliases || acc_alias || daliases || aliases2><list aliases as alias><call checkAmountOfServerAlias()> ${alias.config}.${hosting.parent.name} </list><if acc_alias><call checkAmountOfServerAlias()> ${acc_alias.config}</if><list daliases as dalias><call checkAmountOfServerAlias()> ${dalias.alias}<call checkAmountOfServerAlias()> www.${dalias.alias}</list><list aliases2 as alias><call checkAmountOfServerAlias()> ${alias.name}</list> </if>

User	     ${hosting.recursive("login")}
Group	     ${hosting.recursive("group")}

<list hosting.getChildren() as child><if child.type != "vhost_alias" && child.type != "idomain_alias">${child.config}</if></list>
<assign trlog = hosting.getChild("transferlog")>

<DIRECTORY ${hosting.path}>
OPTIONS <if hosting.index!="0"> Indexes</if><if hosting.getChild("ssi")><if hosting.ssi=="1"> Includes</if><if hosting.ssi=="2"> IncludesNOEXEC</if></if><if hosting.getChild("cgi")> ExecCGI</if><if hosting.multiview=="1"> MultiViews</if><if hosting.symlink=="1"> FollowSymLinks</if><if hosting.symlink=="2"> SymLinksIfOwnerMatch</if>
AllowOverride All
</DIRECTORY>
<if hosting.index=="2">IndexOptions FancyIndexing</if>
</VirtualHost>

<assign ssl=hosting.getChild("ssl")>
<if !ssl><assign ssl=hosting.getChild("sharedssl")></if>
<if ssl && !ssl.deleting>
<IfDefine SSL>
<VirtualHost ${hosting.getIP()}:443>
ServerAdmin  ${hosting.getServerAdmin()}
DocumentRoot ${hosting.path}
<if ssl.shared>ServerName   ${ssl.name}
<else>ServerName   ${hosting.parent.name}
</if>
<assign acc_alias = hosting.getChild("idomain_alias")><assign daliases=hosting.parent.getChildren("domain_alias")><assign aliases = hosting.getChildren("vhost_alias")><if aliases || acc_alias || daliases || ssl.shared>ServerAlias  <list aliases as alias>${alias.config}.${hosting.parent.name} </list><if acc_alias> ${acc_alias.config}</if><list daliases as dalias> ${dalias.alias} www.${dalias.alias}</list> <if ssl.shared>${hosting.parent.name}</if></if>

SSLEngine on

<list hosting.getChildren() as child><if child.type != "vhost_alias" && child.type != "idomain_alias">${child.config}</if></list>


User	     ${hosting.recursive("login")}
Group	     ${hosting.recursive("group")}
<DIRECTORY ${hosting.path}>
OPTIONS <if hosting.index!="0"> Indexes</if><if hosting.getChild("ssi")><if hosting.ssi=="1"> Includes</if><if hosting.ssi=="2"> IncludesNOEXEC</if></if><if hosting.getChild("cgi")> ExecCGI</if><if hosting.multiview=="1"> MultiViews</if><if hosting.symlink=="1"> FollowSymLinks</if><if hosting.symlink=="2"> SymLinksIfOwnerMatch</if>
SSLOptions +StdEnvVars
AllowOverride All
</DIRECTORY>
SSLCertificateFile ${ssl.getConfigPath()}/server.crt
SSLCertificateKeyFile ${ssl.getConfigPath()}/server.key
<if ssl.chain=="1">
SSLCertificateChainFile ${ssl.getConfigPath()}/ca.crt
</if>
<if ssl.cert=="1">
SSLCACertificatePath ${ssl.getConfigPath()}
SSLCACertificateFile ${ssl.getConfigPath()}/ca-bundle.crt
</if>
<if ssl.rev=="1">
SSLCARevocationPath ${ssl.getConfigPath()}
SSLCARevocationFile ${ssl.getConfigPath()}/ca-bundle.crl
</if>
<if hosting.index=="2">IndexOptions FancyIndexing</if>
SetEnvIf User-Agent ".*MSIE.*" nokeepalive ssl-unclean-shutdown
</VirtualHost>
</IfDefine>
</if>
<else>
<VirtualHost ${hosting.getIP()}:80>
ServerAdmin  ${hosting.getServerAdmin()}
DocumentRoot /hsphere/shared/skel/suspended
ServerName   ${hosting.parent.name}

<assign acc_alias = hosting.getChild("idomain_alias")><assign daliases=hosting.parent.getChildren("domain_alias")><assign aliases = hosting.getChildren("vhost_alias")><if aliases || acc_alias || daliases>ServerAlias  <list aliases as alias>${alias.config}.${hosting.parent.name} </list><if acc_alias> ${acc_alias.config}</if><list daliases as dalias> ${dalias.alias} www.${dalias.alias}</list></if>

AddType text/html .shtml
AddHandler server-parsed .shtml

ErrorDocument 404 /

<DIRECTORY /hsphere/shared/skel/suspended>
OPTIONS  Includes
</DIRECTORY>

</VirtualHost>
</if>
